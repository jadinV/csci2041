open Literacy

let () = assert (normalize_shape (Leaf 13) = One 13)
let () = assert (eq_nonempty (Cons (4, (Cons (5, (Cons (3, (One 1)))))))
                             (Cons (4, (Cons (5, (Cons (3, (One 1))))))) = true)
let () = assert (eq_nonempty (Cons (4, (Cons (5, (Cons (3, (One 1)))))))
                             (Cons (4, (Cons (5, (Cons (3, (One 5))))))) = false)
let () = assert (eq_nonempty (Cons (4, (Cons (5, (Cons (3, (One 1)))))))
                             (Cons (4, (Cons (5, (Cons (4, (One 1))))))) = false)
let () = assert (eq_nonempty (Cons (4, (Cons (8, (Cons (3, (One 1)))))))
                             (Cons (4, (Cons (5, (Cons (3, (One 1))))))) = false)
let () = assert (eq_nonempty (Cons (4, (Cons (5, (Cons (3, (One 1)))))))
                             (Cons (2, (Cons (5, (Cons (3, (One 1))))))) = false)
let () = assert (map_lookup (Node (Node (End, 1, "B", End), 3, "A", Node (Node (End, 4, "A", End), 5, "C", End))) 0 = None)
let () = assert (map_lookup (Node (Node (End, 1, "B", End), 3, "A", Node (Node (End, 4, "A", End), 5, "C", End))) 5 = Some "C")
let () = assert (map_lookup (Node ((Node (End, 3087398349330821738, (-1936855151245020016), End)), (-2425294851584080780), 3743685142936685708, (Node (End, 1281423424167375002, (-181972328521524919), (Node (End, 1281423424167375002, 0, End)))))) 3087398349330821738 = None)
let () = assert (map_lookup (Node (End, 4163079996170000239, (-1855141197144521499), (Node (End, (-972195958072259435), (-2053560172160185599), (Node (End, (-972195958072259435), 0, End)))) )) (-972195958072259435) = None)
let () = assert (map_insert 4 "G" (Node (Node (End, 1, "B", End), 3, "A", Node (Node (End, 4, "A", End), 5, "C", End))) = Node (Node (End, 1, "B", End), 3, "A", Node (Node (End, 4, "G", End), 5, "C", End)))
let () = assert (map_insert 6 "G" (Node (Node (End, 1, "B", End), 3, "A", Node (Node (End, 4, "A", End), 5, "C", End))) = Node (Node (End, 1, "B", End), 3, "A", Node (Node (End, 4, "A", End), 5, "C", Node(End, 6, "G", End))))
